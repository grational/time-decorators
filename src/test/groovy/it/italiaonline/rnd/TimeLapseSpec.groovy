package it.italiaonline.rnd.time

import spock.lang.Specification
import spock.lang.Shared

/**
 * This Spock specification was auto generated by 'gigawatt'
 * @author gsus
 * @date 15-12-2016 12.55
 */
class TimeLapseSpec extends Specification {

	@Shared def secondInMs  = 1000
	@Shared def minuteInMs  = 60 * secondInMs
	@Shared def hourInMs    = 60 * minuteInMs
	@Shared def dayInMs     = 24 * hourInMs

	def "Check every possible compact timelapse type passed"() {
		expect:
			milliseconds == new TimeLapse(input).ms()
		where:
			input  | milliseconds
			'5'    | (5   * secondInMs)
			'575s' | (575 * secondInMs)
			'17m'  | (17  * minuteInMs)
			'2h'   | (2   * hourInMs)
			'1d'   | (1   * dayInMs)
	}

	def "Check invalid inputs"() {
		given:
			def illegalInput = '17a'
		when:
			new TimeLapse(illegalInput).ms()
		then:
			def exception = thrown(IllegalArgumentException)
			exception.message == "The input '$illegalInput' does not satisfy the rule /^\\d+[smhd]?\$/"
	}
}
